# Values for Tilt development with local registry
# This overrides default values.yaml for local development

# Use local registry for all images
# Note: With containerd config patches, we can use localhost:5000
global:
  imageRegistry: localhost:5000

# Database configuration
database:
  enabled: true
  persistence:
    enabled: true  # Use PVC for database storage
    storageClass: ""  # Use default storage class
    accessMode: ReadWriteOnce
    size: 5Gi  # Smaller size for development
  
  # No security context - let PostgreSQL handle its own permissions
  podSecurityContext: {}
  securityContext: {}
  
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Management service with hot reload
management:
  replicaCount: 1
  image:
    repository: legacy-use-mgmt
    tag: latest
    pullPolicy: Always
  
  env:
    LEGACY_USE_DEBUG: "0"  # Disable reload for now - it's causing issues in Kind
    # ANTHROPIC_API_KEY will be set via --set flag from Tiltfile
    # API_KEY will be set via --set flag from Tiltfile
  
  # Mount source code for hot reload in development
  # NOTE: Disabled for Kind - host paths don't exist on Kind nodes
  extraVolumes: []
    # - name: server-code
    #   hostPath:
    #     path: /data/src/legacy-use/server
    #     type: Directory
    # - name: app-code
    #   hostPath:
    #     path: /data/src/legacy-use/app
    #     type: Directory
    # - name: docker-sock
    #   hostPath:
    #     path: /var/run/docker.sock
    #     type: Socket
  
  extraVolumeMounts: []
    # - name: server-code
    #   mountPath: /home/legacy-use-mgmt/server
    # - name: app-code
    #   mountPath: /home/legacy-use-mgmt/app
    # - name: docker-sock
    #   mountPath: /var/run/docker.sock
  
  resources:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 500m
      memory: 2Gi

# MCP Server
mcpServer:
  enabled: true
  replicaCount: 1
  image:
    repository: legacy-use-mcp-server
    tag: latest
    pullPolicy: Always
  
  env:
    # LEGACY_USE_API_KEY will be set via --set flag from Tiltfile
    LEGACY_USE_API_KEY: ""
    # API_KEY will be set via --set flag from Tiltfile
    API_KEY: ""
  
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

# Targets with reduced resources for development
wineTarget:
  enabled: true
  replicas: 1
  image:
    repository: legacy-use-wine-target
    tag: latest
    pullPolicy: Always
  
  persistence:
    enabled: false  # Use ephemeral storage for development
  
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

linuxTarget:
  enabled: true
  replicas: 1
  image:
    repository: linux-machine
    tag: latest
    pullPolicy: Always
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

androidTarget:
  enabled: true
  replicas: 1
  image:
    repository: legacy-use-android-target
    tag: latest
    pullPolicy: Always
  
  persistence:
    enabled: false  # Use ephemeral storage for development
  
  resources:
    limits:
      cpu: 2
      memory: 2Gi
    requests:
      cpu: 1
      memory: 1Gi

# Windows XP KubeVirt VM (requires KubeVirt to be installed)
windowsXpKubevirt:
  enabled: true  # KubeVirt is installed in our Kind cluster
  
  # Number of replicas for VMIRS
  # Set to 0 initially - the vm-startup-sequencer will scale this up
  replicas: 0
  
  # VM hostname
  hostname: legacy-winxp-dev
  
  # VM CPU and memory configuration
  cpu:
    cores: 2
  memory: 4Gi
  
  # Labels for the VMs
  labels:
    legacy-use.target-type: "windows-xp-vm"
    legacy-use.scalable: "true"
  
  # Use container disk from registry
  containerDisk:
    image: "registry.git.mayflower.de/legacy-use/legacy-use/legacy-use-windows-xp-containerdisk:latest"
    pullPolicy: "IfNotPresent"
  
  
  # Disk configuration
  disk:
    size: 32Gi
    storageClass: standard  # Kind uses 'standard' storage class
  
  
  # VirtIO drivers
  virtioDrivers:
    image: kubevirt/virtio-container-disk:latest
  
  # Service configuration
  service:
    type: ClusterIP
    rdpPort: 3389
    vncPort: 5900
  
  # Cloud-init user data for Windows
  userData: |
    # Add any cloud-init configuration here
    # Note: Windows requires cloudbase-init
  
  # Service configuration
  service:
    type: ClusterIP
    additionalPorts: []
  
  # noVNC for web access
  novnc:
    enabled: true
    image: theasp/novnc:latest
    imagePullPolicy: IfNotPresent
    password: "windows"
    service:
      type: ClusterIP
      port: 6083
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"

# Disable ingress for local development
ingress:
  enabled: false

# Disable autoscaling for development
autoscaling:
  enabled: false

# Windows 10 KubeVirt VM (requires KubeVirt to be installed)
windows10Kubevirt:
  enabled: true  # Re-enabled after fixing issues
  
  # Number of replicas for VMIRS
  # Set to 0 initially - the vm-startup-sequencer will scale this up
  replicas: 0
  
  # VM hostname
  hostname: legacy-win10-dev
  
  # VM CPU and memory configuration
  cpu:
    cores: 2
  memory: 2Gi  # Reduced from 8Gi to save resources
  
  # Labels for the VMs
  labels:
    legacy-use.target-type: "windows-10-vm"
    legacy-use.scalable: "true"
  
  # Use container disk from registry
  containerDisk:
    image: "registry.git.mayflower.de/legacy-use/legacy-use/legacy-use-windows-10-containerdisk:latest"
    pullPolicy: "IfNotPresent"
  
  
  # Disk configuration
  disk:
    size: 64Gi
    storageClass: standard  # Kind uses 'standard' storage class
  
  
  # VirtIO drivers
  virtioDrivers:
    image: kubevirt/virtio-container-disk:latest
  
  # Service configuration
  service:
    type: ClusterIP
    rdpPort: 3389
    vncPort: 5900
  
  # Cloud-init user data for Windows
  userData: |
    # Add any cloud-init configuration here
    # Note: Windows requires cloudbase-init
  
  # noVNC for web access
  novnc:
    enabled: true
    image: theasp/novnc:latest
    imagePullPolicy: IfNotPresent
    password: "windows"
    service:
      type: ClusterIP
      port: 6084
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"

# macOS Mojave KubeVirt VM (requires KubeVirt to be installed)
macosMojaveKubevirt:
  enabled: true  # Enable macOS Mojave VM
  
  # Number of replicas for VMIRS
  # Set to 0 initially - the vm-startup-sequencer will scale this up
  replicas: 0
  
  # VM hostname
  hostname: legacy-mojave-dev
  
  # VM CPU and memory configuration
  cpu:
    cores: 4
  memory: 4Gi  # macOS needs good memory allocation
  
  # Labels for the VMs
  labels:
    legacy-use.target-type: "macos-mojave-vm"
    legacy-use.scalable: "true"
  
  # Use container disk from Mayflower registry
  containerDisk:
    image: "registry.git.mayflower.de/legacy-use/legacy-use/legacy-use-macos-mojave-containerdisk:latest"
    pullPolicy: "IfNotPresent"
  
  # Disk configuration
  disk:
    size: 64Gi
    storageClass: standard  # Kind uses 'standard' storage class
  
  # Service configuration
  service:
    type: ClusterIP
    vncPort: 5900
  
  # Cloud-init user data for macOS
  userData: |
    # macOS cloud-init configuration
  
  # noVNC for web access
  novnc:
    enabled: true
    image: theasp/novnc:latest
    imagePullPolicy: IfNotPresent
    password: "mojave"
    service:
      type: ClusterIP
      port: 6085
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"

# Development-specific service configuration
# Use NodePort for easier access from host
# (Removed duplicate service configurations as they should be in the main sections above)