"""Add container_ip column

Revision ID: 95932493eb61
Revises: d5fbc9ed6349
Create Date: 2025-03-05 21:33:56.135059

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy import text

# revision identifiers, used by Alembic.
revision: str = '95932493eb61'
down_revision: Union[str, None] = 'd5fbc9ed6349'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def column_exists(table: str, column: str) -> bool:
    """Check if a column exists in a table."""
    conn = op.get_bind()
    result = conn.execute(text(f'PRAGMA table_info({table})'))
    columns = [row[1] for row in result.fetchall()]
    return column in columns


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add container_ip column if it doesn't exist
    if not column_exists('sessions', 'container_ip'):
        op.add_column('sessions', sa.Column('container_ip', sa.String(), nullable=True))

    # Drop mapped_port column if it exists
    if column_exists('sessions', 'mapped_port'):
        # SQLite doesn't support dropping columns directly, so we'll need to:
        # 1. Create a new table without the column
        # 2. Copy data from the old table to the new table
        # 3. Drop the old table
        # 4. Rename the new table to the old table name

        # For now, we'll just skip this step as it's complex in SQLite
        # and would require a more involved migration
        pass
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add mapped_port column if it doesn't exist
    if not column_exists('sessions', 'mapped_port'):
        op.add_column('sessions', sa.Column('mapped_port', sa.VARCHAR(), nullable=True))

    # We don't drop container_ip in downgrade since it's already in the model
    # ### end Alembic commands ###
